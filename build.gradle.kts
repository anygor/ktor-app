/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.3.72"

    // Apply the application plugin to add support for building a CLI application.
    application

    id("com.github.johnrengelman.shadow") version "4.0.4"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // Ktor
    implementation("io.ktor:ktor-server-core:1.4.0")

    // Netty
    implementation("io.ktor:ktor-server-netty:1.4.0")

    // Jackson
    implementation("io.ktor:ktor-jackson:1.4.0")

    //Gson
    implementation("com.google.code.gson:gson:2.8.5")

    // Exposed Core, JDBC
    implementation("org.jetbrains.exposed", "exposed-core", "0.24.1")
    implementation("org.jetbrains.exposed", "exposed-jdbc", "0.24.1")

    // MySQL
    implementation("mysql:mysql-connector-java:5.1.48")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
}

application {
    // Define the main class for the application.
    mainClassName = "com.example.ApplicationKt"
}

tasks {
    named<ShadowJar>("shadowJar") {
        archiveBaseName.set("kotlin-application")
        mergeServiceFiles()
        manifest {
            attributes(mapOf("Main-Class" to "ApplicationKt"))
        }
    }
}

tasks {
    build {
        dependsOn(shadowJar)
    }
}

// docker build -t kotlin-app .
// docker run -m512M --cpus 2 -it -p 8080:8080 --rm kotlin-app